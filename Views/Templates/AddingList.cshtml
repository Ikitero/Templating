@model TemplateViewModel

<form method="post"
      data-ajax="true"
      data-ajax-method="post"
      data-ajax-complete="add">
    <select id="template" asp-for="Slug" name="List.Test">
        <option value="_TwoHeaders">Two headers</option>
        <option value="_ThreeImages">Three images</option>
        <option value="_ImageOnTheRight">Image on the right</option>
    </select>
    <input id="test" type="button" value="Click" onclick="loadTemplate()" />
</form>

<form method="post"
      data-ajax="true"
      data-ajax-method="post"
      data-ajax-complete="add">
    <div id="UserContent" asp-validation-summary="All"></div>
    <input type="button" value="Add" onclick="collectObjects()" />
</form>

<script src="~/lib/jquery-ajax-unobtrusive/dist/jquery.unobtrusive-ajax.js"></script>
<script>
    function loadTemplate() {
        var t = document.getElementById("template");
        var s = new Object();
        s = t.options[t.selectedIndex].value;
        $.ajax({
            type: "post",
            url: "@Url.Action("Load")",
            data: { templateName: s },
            success: function (response) {
                var element = document.createElement('div');
                $(element).html(response).appendTo($("#UserContent"))
             },
             failure: function (errMsg) {
                alert(errMsg);
        }
      })

    };
</script>
<script>
        function collectObjects() {
            var t = document.getElementsByTagName('form');
            var json = "";
            for (i = 0; i < t.length; i++) {
                if (t[i].name !== "" ) {
                    var formJson = JSON.stringify($(t[i]).serializeArray());
                    json = json.concat("{templateName " + t[i].name + "}", formJson);
                }
            }
            $.ajax({
                type: "post",
                url: "@Url.Action("Create")",
                data: { data: json },
                    success: function(result) {
        alert("good:" + result);
    },
    failure: function (response) {
        alert("bad:" + response.d);
    }
            })
    };
</script>